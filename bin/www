#!/usr/bin/env node

const App = require('../dist/app').default
const { Database } = require('arangojs')
const debug = require('debug')('usesthis:server')
const http = require('http')
const env = process.env.NODE_ENV || "development"
const dbConfig = require('../arangodb_config')[env]
const db = new Database(dbConfig)
const port = normalizePort(process.env.PORT || '3000')
const server = new http.Server()

App(db).then(app => {
  app.set('port', port)
  server.on('request', app)
  server.on('error', onError)
  server.on('listening', onListening)
  server.listen(port)
})

function normalizePort(val) {
  let port = parseInt(val, 10)

  if (isNaN(port)) {
    // named pipe
    return val
  }

  if (port >= 0) {
    // port number
    return port
  }

  return false
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  let bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  let addr = server.address()
  let bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug('Listening on ' + bind)
}
